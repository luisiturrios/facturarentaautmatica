# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-09-04 00:41
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Configuracion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=10, unique=True)),
                ('valor', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_predio', models.CharField(max_length=50)),
                ('cuenta_predial', models.PositiveIntegerField(blank=True, null=True)),
                ('nombre_cliente', models.CharField(max_length=100)),
                ('rfc_cliente', models.CharField(max_length=13)),
                ('correo_cliente', models.EmailField(max_length=254)),
                ('telefono_cliente', models.CharField(blank=True, max_length=10, null=True)),
                ('saldo_contrato', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('precio_mensual', models.DecimalField(decimal_places=2, help_text='Ingrese el precio antes de impuestos', max_digits=20)),
                ('retener_impuestos', models.BooleanField(default=False, help_text='Marque esta casilla si desea rentener ISR e IVA')),
                ('uso_cfdi', models.CharField(choices=[('P01', 'Por definir'), ('G03', 'Gastos en general'), ('I01', 'Construcciones'), ('I02', 'Mobilario y equipo de oficina por inversiones'), ('G01', 'Adquisici\xf3n de mercancias'), ('G02', 'Devoluciones, descuentos o bonificaciones'), ('I03', 'Equipo de transporte'), ('I04', 'Equipo de computo y accesorios'), ('I05', 'Dados, troqueles, moldes, matrices y herramental'), ('I06', 'Comunicaciones telef\xf3nicas'), ('I07', 'Comunicaciones satelitales'), ('I08', 'Otra maquinaria y equipo'), ('D01', 'Honorarios m\xe9dicos, dentales y gastos hospitalarios'), ('D02', 'Gastos m\xe9dicos por incapacidad o discapacidad'), ('D03', 'Gastos funerales'), ('D04', 'Donativos'), ('D05', 'Intereses reales efectivamente pagados por cr\xe9ditos hipotecarios (casa habitaci\xf3n)'), ('D06', 'Aportaciones voluntarias al SAR'), ('D07', 'Primas por seguros de gastos m\xe9dicos'), ('D08', 'Gastos de transportaci\xf3n escolar obligatoria'), ('D09', 'Dep\xf3sitos en cuentas para el ahorro, primas que tengan como base planes de pensiones'), ('D10', 'Pagos por servicios educativos (colegiaturas)')], default='G03', max_length=3)),
                ('metodo_pago', models.CharField(choices=[('PUE', 'Pago en una sola exhibici\xf3n'), ('PIP', 'Pago inicial y parcialidades'), ('PPD', 'Pago en parcialidades o diferido')], default='PUE', max_length=3)),
                ('forma_pago', models.CharField(choices=[('01', 'Efectivo'), ('02', 'Cheque nominativo'), ('03', 'Transferencia electr\xf3nica de fondos'), ('04', 'Tarjeta de cr\xe9dito'), ('05', 'Monedero electr\xf3nico'), ('06', 'Dinero electr\xf3nico'), ('08', 'Vales de despensa'), ('12', 'Daci\xf3n en pago'), ('13', 'Pago por subrogaci\xf3n'), ('14', 'Pago por consignaci\xf3n'), ('15', 'Condonaci\xf3n'), ('17', 'Compensaci\xf3n'), ('23', 'Novaci\xf3n'), ('24', 'Confusi\xf3n'), ('25', 'Remisi\xf3n de deuda'), ('26', 'Prescripci\xf3n o caducidad'), ('27', 'A satisfacci\xf3n del acreedor'), ('28', 'Tarjeta de d\xe9bito'), ('29', 'Tarjeta de servicios'), ('99', 'Por definir')], default='01', max_length=3)),
                ('dia_facturacion', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, '23'), (24, '24'), (25, '25'), (26, '26'), (27, '27'), (28, '28')], default=1)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificado', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, unique=True)),
                ('serie', models.CharField(max_length=10)),
                ('folio', models.IntegerField()),
                ('fecha', models.DateField()),
                ('nombre_cliente', models.CharField(max_length=100)),
                ('rfc_cliente', models.CharField(max_length=13)),
                ('correo_cliente', models.EmailField(max_length=254)),
                ('concepto', models.CharField(max_length=500)),
                ('sub_total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('iva_trasladado', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('iva_retenido', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('isr_retenido', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('pagada', models.BooleanField(default=False)),
                ('fecha_pago', models.DateField(blank=True, null=True)),
                ('pdf', models.FileField(upload_to='facturas')),
                ('xml', models.FileField(upload_to='facturas')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificado', models.DateTimeField(auto_now=True)),
                ('contrato', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='webapp.Contrato')),
            ],
        ),
    ]
